[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Aprendiendo Ciencia de Datos",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\nEstoy siguiendo un tutorial de como hacer un sitio web con quarto\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#gráfica",
    "href": "index.html#gráfica",
    "title": "Breve Análisis Exploratorio",
    "section": "Gráfica",
    "text": "Gráfica\n\niris |> \nggplot(aes(x=Petal.Length,y=Petal.Width,color=Species))+\n  geom_point()\n\n\n\n\n\nSumario de datos\n\nsummary(iris)\n\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n\n\nOjo que con este método sólo podremos publicar un documento Quarto por repositorio."
  },
  {
    "objectID": "breve_analisis_exploratorio.html",
    "href": "breve_analisis_exploratorio.html",
    "title": "Breve Análisis Exploratorio",
    "section": "",
    "text": "head(iris, 10)\n\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1           5.1         3.5          1.4         0.2  setosa\n2           4.9         3.0          1.4         0.2  setosa\n3           4.7         3.2          1.3         0.2  setosa\n4           4.6         3.1          1.5         0.2  setosa\n5           5.0         3.6          1.4         0.2  setosa\n6           5.4         3.9          1.7         0.4  setosa\n7           4.6         3.4          1.4         0.3  setosa\n8           5.0         3.4          1.5         0.2  setosa\n9           4.4         2.9          1.4         0.2  setosa\n10          4.9         3.1          1.5         0.1  setosa\n\n\nCarga librerias\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors"
  },
  {
    "objectID": "breve_analisis_exploratorio.html#gráfica",
    "href": "breve_analisis_exploratorio.html#gráfica",
    "title": "Breve Análisis Exploratorio",
    "section": "Gráfica",
    "text": "Gráfica\n\niris |> \nggplot(aes(x=Petal.Length,y=Petal.Width,color=Species))+\n  geom_point()\n\n\n\n\n\nSumario de datos\n\nsummary(iris)\n\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n\n\nOjo que con este método sólo podremos publicar un documento Quarto por repositorio."
  },
  {
    "objectID": "breve_eda_python.html",
    "href": "breve_eda_python.html",
    "title": "Breve EDA en python",
    "section": "",
    "text": "Recuerda usar pip install antes\n\nimport seaborn as sns\nimport pandas as pd\nfrom sklearn import datasets\nimport matplotlib.pyplot as plt\n\nTo load it into python, all you have to do is execute the following code:\n\ndata = datasets.load_breast_cancer()\n\n\ndata.keys()\n\ndict_keys(['data', 'target', 'frame', 'target_names', 'DESCR', 'feature_names', 'filename', 'data_module'])\n\n\n\ndef sklearn_to_df(sklearn_dataset):\n    df = pd.DataFrame(sklearn_dataset['data'], columns=sklearn_dataset['feature_names'])\n    df['target'] = pd.Series(sklearn_dataset['target'])\n    return df\n\nTo use this function and get our dataframe, simply do the following:\n\ncancer_df = sklearn_to_df(datasets.load_breast_cancer())\ncancer_df.head(15)\n\n\n\n\n\n  \n    \n      \n      mean radius\n      mean texture\n      mean perimeter\n      mean area\n      mean smoothness\n      mean compactness\n      mean concavity\n      mean concave points\n      mean symmetry\n      mean fractal dimension\n      ...\n      worst texture\n      worst perimeter\n      worst area\n      worst smoothness\n      worst compactness\n      worst concavity\n      worst concave points\n      worst symmetry\n      worst fractal dimension\n      target\n    \n  \n  \n    \n      0\n      17.99\n      10.38\n      122.80\n      1001.0\n      0.11840\n      0.27760\n      0.30010\n      0.14710\n      0.2419\n      0.07871\n      ...\n      17.33\n      184.60\n      2019.0\n      0.1622\n      0.6656\n      0.7119\n      0.26540\n      0.4601\n      0.11890\n      0\n    \n    \n      1\n      20.57\n      17.77\n      132.90\n      1326.0\n      0.08474\n      0.07864\n      0.08690\n      0.07017\n      0.1812\n      0.05667\n      ...\n      23.41\n      158.80\n      1956.0\n      0.1238\n      0.1866\n      0.2416\n      0.18600\n      0.2750\n      0.08902\n      0\n    \n    \n      2\n      19.69\n      21.25\n      130.00\n      1203.0\n      0.10960\n      0.15990\n      0.19740\n      0.12790\n      0.2069\n      0.05999\n      ...\n      25.53\n      152.50\n      1709.0\n      0.1444\n      0.4245\n      0.4504\n      0.24300\n      0.3613\n      0.08758\n      0\n    \n    \n      3\n      11.42\n      20.38\n      77.58\n      386.1\n      0.14250\n      0.28390\n      0.24140\n      0.10520\n      0.2597\n      0.09744\n      ...\n      26.50\n      98.87\n      567.7\n      0.2098\n      0.8663\n      0.6869\n      0.25750\n      0.6638\n      0.17300\n      0\n    \n    \n      4\n      20.29\n      14.34\n      135.10\n      1297.0\n      0.10030\n      0.13280\n      0.19800\n      0.10430\n      0.1809\n      0.05883\n      ...\n      16.67\n      152.20\n      1575.0\n      0.1374\n      0.2050\n      0.4000\n      0.16250\n      0.2364\n      0.07678\n      0\n    \n    \n      5\n      12.45\n      15.70\n      82.57\n      477.1\n      0.12780\n      0.17000\n      0.15780\n      0.08089\n      0.2087\n      0.07613\n      ...\n      23.75\n      103.40\n      741.6\n      0.1791\n      0.5249\n      0.5355\n      0.17410\n      0.3985\n      0.12440\n      0\n    \n    \n      6\n      18.25\n      19.98\n      119.60\n      1040.0\n      0.09463\n      0.10900\n      0.11270\n      0.07400\n      0.1794\n      0.05742\n      ...\n      27.66\n      153.20\n      1606.0\n      0.1442\n      0.2576\n      0.3784\n      0.19320\n      0.3063\n      0.08368\n      0\n    \n    \n      7\n      13.71\n      20.83\n      90.20\n      577.9\n      0.11890\n      0.16450\n      0.09366\n      0.05985\n      0.2196\n      0.07451\n      ...\n      28.14\n      110.60\n      897.0\n      0.1654\n      0.3682\n      0.2678\n      0.15560\n      0.3196\n      0.11510\n      0\n    \n    \n      8\n      13.00\n      21.82\n      87.50\n      519.8\n      0.12730\n      0.19320\n      0.18590\n      0.09353\n      0.2350\n      0.07389\n      ...\n      30.73\n      106.20\n      739.3\n      0.1703\n      0.5401\n      0.5390\n      0.20600\n      0.4378\n      0.10720\n      0\n    \n    \n      9\n      12.46\n      24.04\n      83.97\n      475.9\n      0.11860\n      0.23960\n      0.22730\n      0.08543\n      0.2030\n      0.08243\n      ...\n      40.68\n      97.65\n      711.4\n      0.1853\n      1.0580\n      1.1050\n      0.22100\n      0.4366\n      0.20750\n      0\n    \n    \n      10\n      16.02\n      23.24\n      102.70\n      797.8\n      0.08206\n      0.06669\n      0.03299\n      0.03323\n      0.1528\n      0.05697\n      ...\n      33.88\n      123.80\n      1150.0\n      0.1181\n      0.1551\n      0.1459\n      0.09975\n      0.2948\n      0.08452\n      0\n    \n    \n      11\n      15.78\n      17.89\n      103.60\n      781.0\n      0.09710\n      0.12920\n      0.09954\n      0.06606\n      0.1842\n      0.06082\n      ...\n      27.28\n      136.50\n      1299.0\n      0.1396\n      0.5609\n      0.3965\n      0.18100\n      0.3792\n      0.10480\n      0\n    \n    \n      12\n      19.17\n      24.80\n      132.40\n      1123.0\n      0.09740\n      0.24580\n      0.20650\n      0.11180\n      0.2397\n      0.07800\n      ...\n      29.94\n      151.70\n      1332.0\n      0.1037\n      0.3903\n      0.3639\n      0.17670\n      0.3176\n      0.10230\n      0\n    \n    \n      13\n      15.85\n      23.95\n      103.70\n      782.7\n      0.08401\n      0.10020\n      0.09938\n      0.05364\n      0.1847\n      0.05338\n      ...\n      27.66\n      112.00\n      876.5\n      0.1131\n      0.1924\n      0.2322\n      0.11190\n      0.2809\n      0.06287\n      0\n    \n    \n      14\n      13.73\n      22.61\n      93.60\n      578.3\n      0.11310\n      0.22930\n      0.21280\n      0.08025\n      0.2069\n      0.07682\n      ...\n      32.01\n      108.80\n      697.7\n      0.1651\n      0.7725\n      0.6943\n      0.22080\n      0.3596\n      0.14310\n      0\n    \n  \n\n15 rows × 31 columns\n\n\n\n\ncancer_df.describe()\n\n\n\n\n\n  \n    \n      \n      mean radius\n      mean texture\n      mean perimeter\n      mean area\n      mean smoothness\n      mean compactness\n      mean concavity\n      mean concave points\n      mean symmetry\n      mean fractal dimension\n      ...\n      worst texture\n      worst perimeter\n      worst area\n      worst smoothness\n      worst compactness\n      worst concavity\n      worst concave points\n      worst symmetry\n      worst fractal dimension\n      target\n    \n  \n  \n    \n      count\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      ...\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n      569.000000\n    \n    \n      mean\n      14.127292\n      19.289649\n      91.969033\n      654.889104\n      0.096360\n      0.104341\n      0.088799\n      0.048919\n      0.181162\n      0.062798\n      ...\n      25.677223\n      107.261213\n      880.583128\n      0.132369\n      0.254265\n      0.272188\n      0.114606\n      0.290076\n      0.083946\n      0.627417\n    \n    \n      std\n      3.524049\n      4.301036\n      24.298981\n      351.914129\n      0.014064\n      0.052813\n      0.079720\n      0.038803\n      0.027414\n      0.007060\n      ...\n      6.146258\n      33.602542\n      569.356993\n      0.022832\n      0.157336\n      0.208624\n      0.065732\n      0.061867\n      0.018061\n      0.483918\n    \n    \n      min\n      6.981000\n      9.710000\n      43.790000\n      143.500000\n      0.052630\n      0.019380\n      0.000000\n      0.000000\n      0.106000\n      0.049960\n      ...\n      12.020000\n      50.410000\n      185.200000\n      0.071170\n      0.027290\n      0.000000\n      0.000000\n      0.156500\n      0.055040\n      0.000000\n    \n    \n      25%\n      11.700000\n      16.170000\n      75.170000\n      420.300000\n      0.086370\n      0.064920\n      0.029560\n      0.020310\n      0.161900\n      0.057700\n      ...\n      21.080000\n      84.110000\n      515.300000\n      0.116600\n      0.147200\n      0.114500\n      0.064930\n      0.250400\n      0.071460\n      0.000000\n    \n    \n      50%\n      13.370000\n      18.840000\n      86.240000\n      551.100000\n      0.095870\n      0.092630\n      0.061540\n      0.033500\n      0.179200\n      0.061540\n      ...\n      25.410000\n      97.660000\n      686.500000\n      0.131300\n      0.211900\n      0.226700\n      0.099930\n      0.282200\n      0.080040\n      1.000000\n    \n    \n      75%\n      15.780000\n      21.800000\n      104.100000\n      782.700000\n      0.105300\n      0.130400\n      0.130700\n      0.074000\n      0.195700\n      0.066120\n      ...\n      29.720000\n      125.400000\n      1084.000000\n      0.146000\n      0.339100\n      0.382900\n      0.161400\n      0.317900\n      0.092080\n      1.000000\n    \n    \n      max\n      28.110000\n      39.280000\n      188.500000\n      2501.000000\n      0.163400\n      0.345400\n      0.426800\n      0.201200\n      0.304000\n      0.097440\n      ...\n      49.540000\n      251.200000\n      4254.000000\n      0.222600\n      1.058000\n      1.252000\n      0.291000\n      0.663800\n      0.207500\n      1.000000\n    \n  \n\n8 rows × 31 columns\n\n\n\n\nplt.plot('mean radius', 'mean area', data = cancer_df)\nplt.show()"
  }
]